==4109== Memcheck, a memory error detector
==4109== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==4109== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==4109== Command: ./main 16 2
==4109== 
==4109== Syscall param msg->desc.port.name points to uninitialised byte(s)
==4109==    at 0x1004A634A: mach_msg_trap (in /usr/lib/system/libsystem_kernel.dylib)
==4109==    by 0x1004A5796: mach_msg (in /usr/lib/system/libsystem_kernel.dylib)
==4109==    by 0x10049F485: task_set_special_port (in /usr/lib/system/libsystem_kernel.dylib)
==4109==    by 0x10063B10E: _os_trace_create_debug_control_port (in /usr/lib/system/libsystem_trace.dylib)
==4109==    by 0x10063B458: _libtrace_init (in /usr/lib/system/libsystem_trace.dylib)
==4109==    by 0x10016B9DF: libSystem_initializer (in /usr/lib/libSystem.B.dylib)
==4109==    by 0x100029A1A: ImageLoaderMachO::doModInitFunctions(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==4109==    by 0x100029C1D: ImageLoaderMachO::doInitialization(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==4109==    by 0x1000254A9: ImageLoader::recursiveInitialization(ImageLoader::LinkContext const&, unsigned int, char const*, ImageLoader::InitializerTimingList&, ImageLoader::UninitedUpwards&) (in /usr/lib/dyld)
==4109==    by 0x100025440: ImageLoader::recursiveInitialization(ImageLoader::LinkContext const&, unsigned int, char const*, ImageLoader::InitializerTimingList&, ImageLoader::UninitedUpwards&) (in /usr/lib/dyld)
==4109==    by 0x100024523: ImageLoader::processInitializers(ImageLoader::LinkContext const&, unsigned int, ImageLoader::InitializerTimingList&, ImageLoader::UninitedUpwards&) (in /usr/lib/dyld)
==4109==    by 0x1000245B8: ImageLoader::runInitializers(ImageLoader::LinkContext const&, ImageLoader::InitializerTimingList&) (in /usr/lib/dyld)
==4109==  Address 0x10489cbcc is on thread 1's stack
==4109==  in frame #2, created by task_set_special_port (???:)
==4109== 
==4109== Conditional jump or move depends on uninitialised value(s)
==4109==    at 0x1000036F4: PowerSet(std::__1::vector<std::__1::vector<double, std::__1::allocator<double> >, std::__1::allocator<std::__1::vector<double, std::__1::allocator<double> > > >&, int) (in ./main)
==4109==    by 0x100005C66: main (in ./main)
==4109== 
==4109== Invalid read of size 4
==4109==    at 0x100001CD5: std::__1::vector<int, std::__1::allocator<int> >::insert(std::__1::__wrap_iter<int const*>, int const&) (in ./main)
==4109==    by 0x10000358B: PowerSet(std::__1::vector<std::__1::vector<double, std::__1::allocator<double> >, std::__1::allocator<std::__1::vector<double, std::__1::allocator<double> > > >&, int) (in ./main)
==4109==    by 0x100005C66: main (in ./main)
==4109==  Address 0x100b6a7d0 is 0 bytes after a block of size 64 alloc'd
==4109==    at 0x1000A9616: malloc (in /usr/local/Cellar/valgrind/3.13.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==4109==    by 0x100193E0D: operator new(unsigned long) (in /usr/lib/libc++abi.dylib)
==4109==    by 0x10000880B: std::__1::__split_buffer<int, std::__1::allocator<int>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<int>&) (in ./main)
==4109==    by 0x100007EBC: std::__1::__split_buffer<int, std::__1::allocator<int>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<int>&) (in ./main)
==4109==    by 0x100008E99: std::__1::vector<int, std::__1::allocator<int> >::__append(unsigned long) (in ./main)
==4109==    by 0x10000389A: std::__1::vector<int, std::__1::allocator<int> >::resize(unsigned long) (in ./main)
==4109==    by 0x100002899: PowerSet(std::__1::vector<std::__1::vector<double, std::__1::allocator<double> >, std::__1::allocator<std::__1::vector<double, std::__1::allocator<double> > > >&, int) (in ./main)
==4109==    by 0x100005C66: main (in ./main)
==4109== 
==4109== 
==4109== HEAP SUMMARY:
==4109==     in use at exit: 18,193 bytes in 162 blocks
==4109==   total heap usage: 224 allocs, 62 frees, 31,245 bytes allocated
==4109== 
==4109== LEAK SUMMARY:
==4109==    definitely lost: 0 bytes in 0 blocks
==4109==    indirectly lost: 0 bytes in 0 blocks
==4109==      possibly lost: 72 bytes in 3 blocks
==4109==    still reachable: 200 bytes in 6 blocks
==4109==         suppressed: 17,921 bytes in 153 blocks
==4109== Rerun with --leak-check=full to see details of leaked memory
==4109== 
==4109== For counts of detected and suppressed errors, rerun with: -v
==4109== Use --track-origins=yes to see where uninitialised values come from
==4109== ERROR SUMMARY: 5 errors from 3 contexts (suppressed: 4 from 4)
